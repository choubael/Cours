{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { Collapse, CollapseHeader, CollapseBody } from 'accordion-collapse-react-native';\nimport { styles } from \"../../assets/Data/Styles\";\nimport { HStack, ScrollView, Text, useColorMode } from 'native-base';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { COLOR_THEME, DARK, WHITE } from \"../../assets/Data/Couleurs&Cte\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Question = function Question(_ref) {\n  var num = _ref.num,\n    question = _ref.question,\n    reponse = _ref.reponse;\n  var theme_white_dark = useColorMode().colorMode === 'light' ? WHITE : DARK;\n  var theme_ct_white = useColorMode().colorMode === 'light' ? COLOR_THEME : WHITE;\n  var theme_black_white = useColorMode().colorMode === 'light' ? 'black' : WHITE;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    collapsed = _useState2[0],\n    setcollapsed = _useState2[1];\n  return _jsxs(Collapse, {\n    style: styles(useColorMode().colorMode).Question,\n    onToggle: function onToggle(isExpanded) {\n      return setcollapsed(isExpanded);\n    },\n    children: [_jsxs(CollapseHeader, {\n      children: [_jsxs(HStack, {\n        justifyContent: 'space-between',\n        children: [_jsxs(Text, {\n          fontWeight: 'bold',\n          color: theme_ct_white,\n          children: [\"Question \", num]\n        }), !collapsed ? _jsx(FontAwesome5, {\n          name: \"chevron-circle-down\",\n          size: 24,\n          color: theme_ct_white\n        }) : _jsx(FontAwesome5, {\n          name: \"chevron-circle-up\",\n          size: 24,\n          color: theme_ct_white\n        })]\n      }), _jsx(Text, {\n        color: theme_black_white,\n        children: question\n      })]\n    }), _jsx(CollapseBody, {\n      style: styles(useColorMode().colorMode).reponse,\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        children: _jsx(Text, {\n          color: WHITE,\n          children: reponse\n        })\n      })\n    })]\n  });\n};\nexport default Question;","map":{"version":3,"names":["React","useState","Collapse","CollapseHeader","CollapseBody","styles","HStack","ScrollView","Text","useColorMode","FontAwesome5","COLOR_THEME","DARK","WHITE","jsxs","_jsxs","jsx","_jsx","Question","_ref","num","question","reponse","theme_white_dark","colorMode","theme_ct_white","theme_black_white","_useState","_useState2","_slicedToArray","collapsed","setcollapsed","style","onToggle","isExpanded","children","justifyContent","fontWeight","color","name","size","horizontal"],"sources":["C:/Users/HP ELITEBOOK 1030 G2/Desktop/My React Native/Cours/components/Elements/Question.js"],"sourcesContent":["import { View } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport {Collapse,CollapseHeader, CollapseBody} from 'accordion-collapse-react-native';\r\nimport { styles } from '../../assets/Data/Styles'\r\nimport { HStack, ScrollView, Text, useColorMode } from 'native-base';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { COLOR_THEME, DARK, WHITE } from '../../assets/Data/Couleurs&Cte';\r\n\r\n\r\nconst Question = ({num, question, reponse}) => {\r\n    const theme_white_dark = useColorMode().colorMode === 'light' ? WHITE : DARK;\r\n    const theme_ct_white = useColorMode().colorMode === 'light' ? COLOR_THEME : WHITE;\r\n    const theme_black_white = useColorMode().colorMode === 'light' ? 'black' : WHITE;\r\n\r\n\r\n    const [collapsed, setcollapsed] = useState(false);\r\n  return (\r\n    <Collapse style={styles(useColorMode().colorMode).Question} onToggle={(isExpanded)=> setcollapsed(isExpanded)}>\r\n        <CollapseHeader>\r\n            <HStack justifyContent={'space-between'}>\r\n                <Text fontWeight={'bold'} color={theme_ct_white}>Question {num}</Text>\r\n                {!collapsed ? \r\n                <FontAwesome5 name=\"chevron-circle-down\" size={24} color={theme_ct_white} />\r\n                :\r\n                <FontAwesome5 name=\"chevron-circle-up\" size={24} color={theme_ct_white} />\r\n            }\r\n            </HStack>\r\n            <Text color={theme_black_white}>{question}</Text>\r\n        </CollapseHeader>\r\n        <CollapseBody style={styles(useColorMode().colorMode).reponse}>\r\n            <ScrollView horizontal>\r\n                <Text color={WHITE}>{reponse}</Text>\r\n            </ScrollView>\r\n        </CollapseBody>\r\n    </Collapse>\r\n  )\r\n}\r\n\r\nexport default Question"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,QAAQ,EAACC,cAAc,EAAEC,YAAY,QAAO,iCAAiC;AACrF,SAASC,MAAM;AACf,SAASC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,YAAY,QAAQ,aAAa;AACpE,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,WAAW,EAAEC,IAAI,EAAEC,KAAK;AAAyC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG1E,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAiC;EAAA,IAA5BC,GAAG,GAAAD,IAAA,CAAHC,GAAG;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EACrC,IAAMC,gBAAgB,GAAGd,YAAY,CAAC,CAAC,CAACe,SAAS,KAAK,OAAO,GAAGX,KAAK,GAAGD,IAAI;EAC5E,IAAMa,cAAc,GAAGhB,YAAY,CAAC,CAAC,CAACe,SAAS,KAAK,OAAO,GAAGb,WAAW,GAAGE,KAAK;EACjF,IAAMa,iBAAiB,GAAGjB,YAAY,CAAC,CAAC,CAACe,SAAS,KAAK,OAAO,GAAG,OAAO,GAAGX,KAAK;EAGhF,IAAAc,SAAA,GAAkC1B,QAAQ,CAAC,KAAK,CAAC;IAAA2B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAChC,OACEb,KAAA,CAACb,QAAQ;IAAC8B,KAAK,EAAE3B,MAAM,CAACI,YAAY,CAAC,CAAC,CAACe,SAAS,CAAC,CAACN,QAAS;IAACe,QAAQ,EAAE,SAAAA,SAACC,UAAU;MAAA,OAAIH,YAAY,CAACG,UAAU,CAAC;IAAA,CAAC;IAAAC,QAAA,GAC1GpB,KAAA,CAACZ,cAAc;MAAAgC,QAAA,GACXpB,KAAA,CAACT,MAAM;QAAC8B,cAAc,EAAE,eAAgB;QAAAD,QAAA,GACpCpB,KAAA,CAACP,IAAI;UAAC6B,UAAU,EAAE,MAAO;UAACC,KAAK,EAAEb,cAAe;UAAAU,QAAA,GAAC,WAAS,EAACf,GAAG;QAAA,CAAO,CAAC,EACrE,CAACU,SAAS,GACXb,IAAA,CAACP,YAAY;UAAC6B,IAAI,EAAC,qBAAqB;UAACC,IAAI,EAAE,EAAG;UAACF,KAAK,EAAEb;QAAe,CAAE,CAAC,GAE5ER,IAAA,CAACP,YAAY;UAAC6B,IAAI,EAAC,mBAAmB;UAACC,IAAI,EAAE,EAAG;UAACF,KAAK,EAAEb;QAAe,CAAE,CAAC;MAAA,CAEtE,CAAC,EACTR,IAAA,CAACT,IAAI;QAAC8B,KAAK,EAAEZ,iBAAkB;QAAAS,QAAA,EAAEd;MAAQ,CAAO,CAAC;IAAA,CACrC,CAAC,EACjBJ,IAAA,CAACb,YAAY;MAAC4B,KAAK,EAAE3B,MAAM,CAACI,YAAY,CAAC,CAAC,CAACe,SAAS,CAAC,CAACF,OAAQ;MAAAa,QAAA,EAC1DlB,IAAA,CAACV,UAAU;QAACkC,UAAU;QAAAN,QAAA,EAClBlB,IAAA,CAACT,IAAI;UAAC8B,KAAK,EAAEzB,KAAM;UAAAsB,QAAA,EAAEb;QAAO,CAAO;MAAC,CAC5B;IAAC,CACH,CAAC;EAAA,CACT,CAAC;AAEf,CAAC;AAED,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}